# Proxmox Configuration
variable "target_node" {
  description = "Proxmox target node name"
  type        = string
  default     = "proxmox"

  validation {
    condition     = length(var.target_node) > 0
    error_message = "Target node cannot be empty."
  }
}

variable "storage_pool" {
  description = "Proxmox storage pool name"
  type        = string
  default     = "local-zfs"
}

# Template Configuration
variable "template_vm_id" {
  description = "VM ID for the Ubuntu LTS template"
  type        = number
  default     = 9000

  validation {
    condition     = var.template_vm_id >= 9000 && var.template_vm_id <= 9999
    error_message = "Template VM ID should be in the 9000-9999 range to avoid conflicts."
  }
}

variable "template_name" {
  description = "Name of the Ubuntu LTS template"
  type        = string
  default     = "ubuntu-lts-template"

  validation {
    condition     = can(regex("^[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9]$", var.template_name))
    error_message = "Template name must start and end with alphanumeric characters and can contain dots, underscores, and hyphens."
  }
}

variable "tags" {
  description = "Tags to apply to the template"
  type        = list(string)
  default     = ["ubuntu-template", "lts", "cloudinit", "homelab"]
}

# Ubuntu Version Configuration
variable "ubuntu_version" {
  description = "Ubuntu LTS version"
  type        = string
  default     = "24.04"

  validation {
    condition     = contains(["20.04", "22.04", "24.04"], var.ubuntu_version)
    error_message = "Ubuntu version must be a supported LTS version: 20.04, 22.04, or 24.04."
  }
}

variable "image_url" {
  description = "URL to download the Ubuntu cloud image from"
  type        = string
  default     = "https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-amd64.img"
}

variable "image_name" {
  description = "Local filename for the downloaded cloud image"
  type        = string
  default     = "ubuntu-noble-cloudimg-amd64.img"
}

variable "disk_size" {
  description = "Disk size for the template"
  type        = string
  default     = "20G"

  validation {
    condition     = can(regex("^[0-9]+[MG]$", var.disk_size))
    error_message = "Disk size must be in format like '20G' or '2048M'."
  }
}

# Hardware Configuration
variable "memory" {
  description = "Memory allocation in MB"
  type        = number
  default     = 2048

  validation {
    condition     = var.memory >= 512 && var.memory <= 32768
    error_message = "Memory must be between 512MB and 32GB."
  }
}

variable "cpu_type" {
  description = "CPU type (host recommended for best performance)"
  type        = string
  default     = "host"

  validation {
    condition     = contains(["host", "kvm64", "qemu64"], var.cpu_type)
    error_message = "CPU type must be one of: host, kvm64, qemu64."
  }
}

variable "cpu_sockets" {
  description = "Number of CPU sockets"
  type        = number
  default     = 1

  validation {
    condition     = var.cpu_sockets >= 1 && var.cpu_sockets <= 4
    error_message = "CPU sockets must be between 1 and 4."
  }
}

variable "cpu_cores" {
  description = "Number of CPU cores"
  type        = number
  default     = 2

  validation {
    condition     = var.cpu_cores >= 1 && var.cpu_cores <= 16
    error_message = "CPU cores must be between 1 and 16."
  }
}

# Network Configuration
variable "network_bridge" {
  description = "Network bridge to attach the VM to"
  type        = string
  default     = "vmbr0"
}

# Cloud-init Configuration
variable "cloud_init_user" {
  description = "Default user for cloud-init"
  type        = string
  default     = "ubuntu"

  validation {
    condition     = length(var.cloud_init_user) > 0
    error_message = "Cloud-init user cannot be empty."
  }
}

variable "cloud_init_packages" {
  description = "List of packages to install via cloud-init"
  type        = list(string)
  default = [
    "qemu-guest-agent",
    "curl",
    "wget",
    "git",
    "htop",
    "vim",
    "unzip"
  ]
}

variable "cloud_init_runcmd" {
  description = "List of commands to run via cloud-init"
  type        = list(string)
  default = [
    "apt-get update",
    "apt-get upgrade -y",
    "apt-get autoremove -y",
    "systemctl enable qemu-guest-agent",
    "systemctl start qemu-guest-agent",
    "systemctl enable ssh",
    "echo 'Template setup completed' > /var/log/cloud-init-template.log"
  ]
}

variable "cloud_init_additional_config" {
  description = "Additional cloud-init configuration (YAML format)"
  type        = string
  default     = <<-EOT
# Additional homelab-specific configuration
write_files:
  - path: /etc/motd
    content: |
      Ubuntu LTS Template - Homelab
      Generated by OpenTofu
      Ready for cloning and configuration management
    permissions: '0644'
    owner: root:root

# Ensure proper locale
locale: en_US.UTF-8
timezone: UTC
EOT
}

variable "ssh_keys_file" {
  description = "Path to SSH public keys file"
  type        = string
  default     = "/root/.ssh/authorized_keys"
}
